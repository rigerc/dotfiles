#!/bin/bash
set -euo pipefail

source "$HOME/.bashrc"
test -d ~/.linuxbrew && eval "$(~/.linuxbrew/bin/brew shellenv)"
test -d /home/linuxbrew/.linuxbrew && eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo -e "${YELLOW}Finishing up installation and setting up Zsh...${NC}"
echo -e "${YELLOW}Running as user: $(whoami)${NC}"

# Function to run command and verify success
run_command() {
    local description="$1"
    local command="$2"
    
    echo -e "${YELLOW}${description}${NC}"
    
    if eval "$command" 2>/dev/null; then
        echo -e "${GREEN}✓ ${description} completed successfully${NC}"
        return 0
    else
        echo -e "${RED}✗ ${description} failed${NC}"
        return 1
    fi
}

# Track overall success
all_success=true

# Setup Zsh as default shell
if ! run_command "Setting up Zsh as default shell..." "
    ZSH_PATH=\$(which zsh)
    if ! grep -q \"^\$ZSH_PATH\$\" /etc/shells; then
        echo \"Adding Zsh to /etc/shells...\"
        echo \"\$ZSH_PATH\" | sudo tee -a /etc/shells >/dev/null
        echo \"Zsh added to /etc/shells\"
    else
        echo \"Zsh already in /etc/shells\"
    fi

    if [[ \"\$SHELL\" != \"\$ZSH_PATH\" ]]; then
        echo \"Setting Zsh as default shell...\"
        sudo chsh -s \"\$ZSH_PATH\" \$(whoami)
        echo \"DEBUG: sudo chsh -s \"\$ZSH_PATH\" \$(whoami)\"
        echo \"Zsh set as default shell\"
    else
        echo \"Zsh already set as default shell\"
    fi

"; then
    all_success=false
fi

# Cleaning up LazyVim...
if ! run_command "Cleaning up LazyVim..." "rm -rf ~/.config/nvim/.git"; then
    all_success=false
fi

# Rebuild font cache
if ! run_command "Rebuilding font cache..." "fc-cache -f -v"; then
    all_success=false
fi

# Generate locales
if ! run_command "Generating locales..." "locale-gen"; then
    all_success=false
fi

# Install Tmux plugins
if ! run_command "Installing Tmux plugins..." "~/.config/tmux/plugins/tpm/bin/install_plugins"; then
    all_success=false
fi

# Move WSL configuration and cleanup
if ! run_command "Moving WSL configuration and cleaning up..." "
    if [[ -f \"\$HOME/tmp/wsl.conf\" ]]; then
        echo \"Moving wsl.conf to /etc/wsl.conf...\"
        sudo mv \"\$HOME/tmp/wsl.conf\" /etc/wsl.conf

        # Verify the file was moved properly
        if [[ -f \"/etc/wsl.conf\" ]]; then
            echo \"✓ wsl.conf successfully moved to /etc/wsl.conf\"
        else
            echo \"✗ Failed to move wsl.conf to /etc/wsl.conf\"
            exit 1
        fi

        # Clean up the tmp directory
        if [[ -d \"\$HOME/tmp\" ]]; then
            echo \"Removing \$HOME/tmp directory...\"
            rm -rf \"\$HOME/tmp\"
            echo \"✓ \$HOME/tmp directory removed\"
        fi
    else
        echo \"No wsl.conf found in \$HOME/tmp, skipping WSL configuration\"
    fi
"; then
    all_success=false
fi

echo ""
if [ "$all_success" = true ]; then
    echo -e "${GREEN}All operations completed successfully!${NC}"
else
    echo -e "${YELLOW}Some operations failed. Please review the output above.${NC}"
fi

echo -e "${RED}Restart shell to finish...${NC}"
sleep 10
exit