#!{{ lookPath "bash" }}
set -uo pipefail

# Source shared utilities
if [[ -z "${CHEZMOI_WORKING_TREE}" ]]; then
    echo "Error, \$CHEZMOI_WORKING_TREE must be set. Please only run this script via chezmoi"
    exit 1
fi
source "${CHEZMOI_WORKING_TREE}/utils/common.sh"

log_header "Checking prerequisites"

# Install package using available package manager
install_package() {
    local package="$1"

    # Use the system package manager helper from common.sh
    if install_system_package "$package"; then
        return 0
    fi

    # If system package manager fails, try fallback methods
    log_warning "System package manager failed for $package, trying fallback methods..."

    # If we get here, all installation methods failed
    log_warning "Cannot determine system type or no supported package manager found for $package installation"
    log_info "Please install $package manually"
    case "$package" in
        git) log_info "Git download page: https://git-scm.com/downloads" ;;
        gum) log_info "Gum installation page: https://github.com/charmbracelet/gum" ;;
    esac

    return 1
}

# Check if gum is installed
if ! command -v gum >/dev/null 2>&1; then
    if ! install_package "gum"; then
        log_warning "gum installation failed, but continuing..."
    fi
else
fi

# Check if git is installed
if ! command -v git >/dev/null 2>&1; then
    if ! install_package "git"; then
        log_warning "git installation failed, but continuing..."
    fi
else
fi

# Check if bitwarden-cli is installed
if ! command -v bw >/dev/null 2>&1; then
    if ! install_package "bitwarden-cli"; then
        log_warning "bitwarden-cli installation failed, but continuing..."
    fi
else
fi

# Prerequisites fulfilled
log_success "Prerequisites fulfilled!"
    if command_exists bw; then
log_info "Logging in to BitWarden"
    # Check if already logged in
    if bw unlock --check &>/dev/null; then
        log_success "Already logged in to Bitwarden"
        return 0
    fi
    
    # Set client ID
    export BW_CLIENTID="user.e4878fd7-8be5-4510-b457-ac6a00a44fff"
    
    # Prompt for client secret using gum if available, otherwise read
    if gum_available; then
        BW_CLIENTSECRET=$(gum input --password --placeholder "Enter Bitwarden client secret")
        if [[ -z "$BW_CLIENTSECRET" ]]; then
            log_error "Client secret is required"
            return 1
        fi
    else
        echo -n "Enter Bitwarden client secret: "
        read -s BW_CLIENTSECRET
        echo
        if [[ -z "$BW_CLIENTSECRET" ]]; then
            log_error "Client secret is required"
            return 1
        fi
    fi
    export BW_CLIENTSECRET
    
    # Login with API key
    log_info "Logging in to Bitwarden..."
    if bw login --apikey >/dev/null 2>&1; then
        log_success "Login successful!"
        
        # Sync after successful login
        log_info "Syncing vault..."
        if bw sync >/dev/null 2>&1; then
            log_success "Sync completed successfully"
        else
            log_warning "Sync failed"
            unset BW_CLIENTSECRET
            return 1
        fi
    else
        log_error "Login failed"
        unset BW_CLIENTSECRET
        return 1
    fi
    fi