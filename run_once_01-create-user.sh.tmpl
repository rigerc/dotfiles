#!/bin/bash
# Chezmoi script to create a new user with sudo privileges
# This script runs only once during initial setup

set -euo pipefail

# Get username from Chezmoi data
NEW_USER="{{ .data.username }}"

# Function to print colored output
print_status() {
    echo -e "\033[1;34m[INFO]\033[0m $1"
}

print_success() {
    echo -e "\033[1;32m[SUCCESS]\033[0m $1"
}

print_error() {
    echo -e "\033[1;31m[ERROR]\033[0m $1"
}

# Check if running as root
if [[ $EUID -ne 0 ]]; then
   print_error "This script must be run as root (use sudo)"
   exit 1
fi

print_status "Creating user '$NEW_USER' with sudo privileges..."

# Check if user already exists
if id "$NEW_USER" &>/dev/null; then
    print_status "User '$NEW_USER' already exists, skipping creation"
else
    # Create user with home directory and default shell
    useradd -m -s /bin/bash "$NEW_USER"
    print_success "User '$NEW_USER' created successfully"
fi

# Ensure wheel group exists
if ! getent group wheel >/dev/null; then
    groupadd wheel
    print_status "Created wheel group"
fi

# Add user to wheel group
if ! groups "$NEW_USER" | grep -q "\bwheel\b"; then
    usermod -aG wheel "$NEW_USER"
    print_success "Added '$NEW_USER' to wheel group"
else
    print_status "User '$NEW_USER' is already in wheel group"
fi

# Create sudoers configuration for wheel group
SUDOERS_FILE="/etc/sudoers.d/wheel"
SUDOERS_CONTENT="%wheel ALL=(ALL:ALL) NOPASSWD: ALL"

if [[ -f "$SUDOERS_FILE" ]]; then
    if grep -q "%wheel ALL=(ALL:ALL) NOPASSWD: ALL" "$SUDOERS_FILE"; then
        print_status "Sudoers configuration already exists"
    else
        print_error "Sudoers file exists but doesn't contain expected configuration"
        exit 1
    fi
else
    # Create sudoers file with proper permissions
    echo "$SUDOERS_CONTENT" > "$SUDOERS_FILE"
    chmod 440 "$SUDOERS_FILE"

    # Verify sudoers syntax
    if visudo -c -f "$SUDOERS_FILE"; then
        print_success "Created sudoers configuration for wheel group"
    else
        print_error "Invalid sudoers syntax, removing file"
        rm -f "$SUDOERS_FILE"
        exit 1
    fi
fi

# Set a temporary password or leave passwordless based on your preference
# Uncomment the following lines to set a temporary password:
# TEMP_PASSWORD="tempPassword123"
# echo "$NEW_USER:$TEMP_PASSWORD" | chpasswd
# print_status "Set temporary password for '$NEW_USER' (should be changed on first login)"

print_status "Creating /etc/wsl.conf"
sudo cp "{{ .chezmoi.sourceDir }}/etc/wsl.conf" /etc/wsl.conf

print_success "User setup completed successfully!"